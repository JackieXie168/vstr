2002-07-17  James Antill  <james@and.org>

	* NEWS: Release 0.9.8

	* include/Makefile.am: Install the vstr-inline.h header. *sigh*

2002-07-16  James Antill  <james@and.org>

	* include/vstr-internal.h (VSTR__H): Add visibility hidden attribute to
	internal variables that are abovee file scope.
	(VSTR__AH): Add alias and visibility hidden attributes to exported
	functions when used with the internal API of vstr_nx_*.

2002-07-15  James Antill  <james@and.org>

	* NEWS: Release 0.9.7

	* src/vstr_cache.c (vstr__cache_cbs): Allow cache_internal to be enabled
	again.

	* src/vstr.c (vstr_free_conf): Make vstr_free_conf() have the std. free
	semantics.

2002-07-09  James Antill  <james@and.org>

	* include/vstr-inline.h (vstr_del): Add inline vstr_del() for deleting
	from the begining of Vstrs.

	* src/vstr_ref.c (vstr_ref_del): Make vstr_ref_del() have the std. free
	semantics.

2002-07-07  James Antill  <james@and.org>

	* src/vstr.c (vstr_free_base): Must free conf last, as it might be the
	last reference.

2002-07-05  James Antill  <james@and.org>

	* src/vstr_srch.c (vstr_srch_buf_fwd): Speed up search buf fwd.

	* src/vstr_inline.c: Include out of line inlines.

2002-07-04  James Antill  <james@and.org>

	* src/vstr_add_fmt_dbl_host.c (vstr__add_fmt_dbl): Do thousand
	seperation on 'g' in 'f' style as well as 'f' itself.

	* include/vstr-switch.h (VSTR_COMPILE_INLINE): Added runtime compile
	switch to turn off inline'ing.

	* src/vstr_cache.c (vstr_cache_set_data): Turn cache_internal off if a 
	cache data value is set that isn't internal to the library. This is
	speeds up the vstr_add_buf() inline.

	* Documentation/functions.txt: Added doco. for vstr_exit(), vstr_num(),
	VSTR_SRCH_CSTR_BUF_FWD(), VSTR_SRCH_CSTR_BUF_REV(), 
	VSTR_SPN_CSTR_BUF_FWD(), VSTR_SPN_CSTR_BUF_REV(), 
	VSTR_CSPN_CSTR_BUF_FWD(), VSTR_CSPN_CSTR_BUF_REV(), and vstr_cache_sub()

2002-07-03  James Antill  <james@and.org>

	* src/vstr_parse.c (vstr_parse_ipv4): Only increment the length for the
	'/' if we are looking for more than just the ip.

	* src/vstr_add_fmt.c (vstr__add_number): Only always show octal zero 
	when # flag is on.

	* tst/tst-main.c (main): Added "make check"

	* src/vstr.c (vstr__make_conf_loc_def_numeric): Setup decimal point 
	properly.

2002-06-24  James Antill  <james@and.org>

	* include/vstr-inline.h (vstr_add_buf): Add inline function.
	(vstr_sects_add): Add inline function.

	* NEWS: Release 0.9.6

2002-06-24  James Antill  <james@and.org>

	* configure.in (enable-nonposix-host): Added option to remove all
	dependancies on POSIX, so the library can be compiled just using C89.

2002-06-20  James Antill  <james@and.org>

	* include/vstr-extern.h (VSTR_SRCH_CSTR_BUF_FWD): Added function macro.
	(VSTR_SRCH_CSTR_BUF_REV): Added function macro.
	(VSTR_SRCH_SECTS_ADD_CSTR_BUF_FWD): Added function macro.
	(VSTR_SPN_CSTR_BUF_FWD): Added function macro.
	(VSTR_SPN_CSTR_BUF_REV): Added function macro.
	(VSTR_CSPN_CSTR_BUF_FWD): Added function macro.
	(VSTR_CSPN_CSTR_BUF_REV): Added function macro.

	* src/vstr.c (vstr_num): Added function.

2002-06-19  James Antill  <james@and.org>

	* src/vstr_add.c (vstr_add_vstr): Allow a vstr_add_vstr() to be used
	with a single vstr.

	* src/vstr_mov.c (vstr_mov): Allow a vstr_mov() to be used
	with a single vstr.
	(vstr_mov): Add code for "quick" move operations between compatible
	vstrs.

	* src/vstr_sub.c (vstr_sub_vstr): Allow a vstr_sub_vstr() to be used
	with a single vstr.

	* src/vstr_del.c (vstr__del_beg): Only use ->used for _BUF type nodes.
	(vstr_del): Fix accounting of nodes on delete.

2002-06-18  James Antill  <james@and.org>

	* src/vstr.c (vstr__make_conf_loc_numeric): Minor memory leak if 
	deciaml_point_str allocation failed.

2002-06-13  James Antill  <james@and.org>

	* src/vstr.c (vstr_make_conf): Change behavour of vstr_make_conf() and
	hence vstr_init() so that they both default to the C locale.

2002-06-04  James Antill  <james@and.org>

	* NEWS: Release 0.9.5

2002-05-22  James Antill  <james@and.org>

	* src/vstr_version.c.in (vstr_version_func): Rewrite function in inline
	asm so it always works in x86 Linux.

2002-05-21  James Antill  <james@and.org>

	* src/vstr_add_fmt.c (vstr_add_vfmt): Fix stupid for loop error.

2002-05-20  James Antill  <james@and.org>

	* src/vstr_add_fmt_dbl_none.c (vstr__add_fmt_dbl): Added generic switch
	for float printing, can currently do host and none. glibc support
	comming soonish.

2002-05-07  James Antill  <james@and.org>

	* NEWS: Release 0.9.4

2002-05-03  James Antill  <james@and.org>

	* src/vstr.c (vstr_exit): Added vstr_exit() function which will cleanup
	memory used by vstr, the only function that's valid to call after this
	is vstr_init().

	* src/vstr_add_fmt.c (vstr__fmt_init_spec): Fixed memory leak in fmt
	spec allocation.

2002-04-17  James Antill  <james@and.org>

	* NEWS: Release 0.9.3

2002-04-16  James Antill  <james@and.org>

	* src/vstr.c (vstr__cache_iovec_valid): Move upto date assignment for
	the iovec cache.

	* src/vstr_cache.c (vstr__cache_iovec_alloc): Don't memmove() iovec
	cache if it isn't valid ... Duh!

2002-04-05  James Antill  <james@and.org>

	* NEWS: Release 0.9.2

	* src/vstr_add.c (vstr_add_iovec_buf_end): Fixup base->end.
	(vstr__cache_iovec_add_node_end): Take into account the offset when
	adding to the end.

	* src/vstr_sc.c (vstr_sc_read_fd): Fix doing a read into a non end part
	of the Vstr string.

	* src/vstr_add.c (vstr_add_iovec_buf_end): Fix premature adding of 
	base->len as that confuses find.

2002-04-03  James Antill  <james@and.org>

	* src/vstr.c (vstr__base_scan_fwd_beg): Allow a whole bunch of stuff to
	access the entire string even if it's empty.

2002-03-21  James Antill  <james@and.org>

	* NEWS: Release 0.9.1

2002-03-12  James Antill  <james@and.org>

	* src/vstr_dup.c (vstr_dup_vstr): Allow len to be zero.
	(vstr_dup_non): Allow len to be zero.
	(vstr_dup_ptr): Allow len to be zero.
	(vstr_dup_buf): Allow len to be zero.

2002-03-02  James Antill  <james@and.org>

	* src/vstr.c (vstr_make_spare_nodes): Renamed function from
	vstr_add_space_nodes() -- consistancy.
	(vstr_free_spare_nodes): Renamed function from
	vstr_del_space_nodes() -- consistancy.

	* include/vstr-const.h (VSTR_FLAG_PARSE_NUM_NO_BEG_ZERO): Added
	constant, so that you can specify that no zeros should precede the
	number.	

	* include/vstr-extern.h (VSTR_SECTS_NUM): Returned object is now a
	pointer to a Section node, instead of a section node.

	* include/vstr-const.h (VSTR_FLAG_SPLIT_REMAIN): Added constant, so you
	can not have non perl style stuff.

2002-02-26  James Antill  <james@and.org>

	* Makefile.am (pkgconfigdir): Changed to pkg-config from gnome-config

	* src/vstr_add.c (vstr__add_setup_pos): Allow updates to the end of a
	node without deleteing the iovec cache.
	(VSTR__ADD_MID): Fix corruption when you delete some of the first node,
	and then add data to the begining of the Vstr string.

2002-02-22  James Antill  <james@and.org>

	* src/vstr_cache.c (vstr__cache_iovec_free): Fix memory leak.

2002-02-21  James Antill  <james@and.org>

	* src/vstr_parse.c (vstr_parse_int): Use right type.
	(vstr_parse_short): Use right type.

2002-02-20  James Antill  <james@and.org>

	* src/vstr_sub.c (vstr_sub_buf): Fixes.

	* include/vstr-extern.h (VSTR_CMP_EQ): Added macro function.
	(VSTR_CMP_BUF_EQ): Added macro function.
	(VSTR_CMP_CASE_EQ): Added macro function.
	(VSTR_CMP_CASE_BUF_EQ): Added macro function.

2002-02-19  James Antill  <james@and.org>

	* src/vstr.c (vstr_make_conf): Make locale malloc() right size.
	(vstr_make_conf): Add cache initialisation.

2002-02-18  James Antill  <james@and.org>

	* src/vstr_cache.c (vstr_cache_add_cb): Added function.
	(vstr_cache_get_data): Added function.
	(vstr_cache_set_data): Added function.
	(vstr_cache_srch): Added function.

2002-02-17  James Antill  <james@and.org>

	* src/vstr_sect.c (vstr_sects_foreach): Fixed the return value.

2002-02-15  James Antill  <james@and.org>

	* src/vstr_parse_netstr.c (vstr_parse_netstr): Added function.
	(vstr_parse_netstr2): Added function.

	* src/vstr_srch_netstr.c (vstr_srch_netstr_fwd): Deleted function.
	(vstr_srch_netstr2_fwd): Deleted function.

2002-02-11  James Antill  <james@and.org>

	* src/vstr_cmp.c (vstr_cmp_case_buf): Added function.

	* src/vstr.c (vstr_init): Allow it to be called myultiple times without
	doing anything bad.

2002-02-10  James Antill  <james@and.org>

	* src/vstr_split.c (vstr_split_chrs): Added function.

	* src/vstr_srch.c (vstr_srch_chrs_fwd): Added function.
	(vstr_srch_chrs_rev): Added function.

	* src/vstr_ref.c (vstr__ref_cb_free_buf_ref): Added debug function.

	* src/vstr_cstr.c (vstr_export_cstr_ref): Altered prototype so an
	offset is passed back as well.

	* src/vstr_conv.c (VSTR__BUF_NEEDED): Fixed major bug, in common code
	for uppercase, lowercase and unprintable_chr()
	(vstr_conv_unprintable_chr): Renamed function from 
	vstr_conv_unprintable().
	(vstr_conv_unprintable_del): Added function.

2002-02-08  James Antill  <james@and.org>

	* src/vstr_export.c (vstr_export_ref): Added function.

2002-02-03  James Antill  <james@and.org>

	* NEWS: Release 0.7.3

2002-02-03  James Antill  <james@and.org>

	* include/vstr-extern.h (VSTR_SECTS_DECL): Changed macro function, it's
	now a single declaration and ISO C89 compliant.
	(VSTR_SECTS_INIT): Added macro function.
	(VSTR_SECTS_DECL_INIT): Added macro function, must be called as well as 
	VSTR_SECTS_DECL.
	(VSTR_SECTS_EXTERN_DECL): Added macro function, so you can have
	global static sects.

	* src/vstr_sect.c (vstr_sects_make): Moved function to be inside the 
	vstr_sect namespace.
	(vstr_sects_free): Dito.

	* configure.in (--enable-ansi):  Added enable-ansi argument.

	* src/vstr_sc.c (vstr_sc_write_fd): Made errno a usable value for all
	error cases.
	(vstr_sc_read_fd): Dito.
	(vstr_sc_add_fd): Dito.

2002-02-01  James Antill  <james@and.org>

	* src/vstr_sc.c (vstr_sc_write_file): Save and restore errno when an 
	error occurs before close().
	(vstr_sc_add_file): Save and restore errno when an error occurs before
	close().

2002-02-01  James Antill  <james@and.org>

	* NEWS: Release 0.7.2

2002-02-01  James Antill  <james@and.org>

	* include/vstr-switch.h (VSTR_COMPILE_INCLUDE): Added compile switch
	function, so to automatic includes.

	* src/vstr_cstr.c (vstr_export_cstr_buf): Added function.

	* src/vstr_ref.c (vstr_ref_add): Changed function name.
	(vstr_ref_del): Changed function name.

	* include/vstr-extern.h (VSTR_DECL_INIT_SECTS): Added macro function.
	(VSTR_DECL_SECTS): Added macro function.
	(VSTR_SECTS_NUM): Added macro function.

	* include/vstr-def.h (struct Vstr_base): Saved some space.
	(struct Vstr_node): Saved some space.

	* src/vstr_sc.c (vstr_sc_add_fd): 
	(vstr_sc_add_file): Added function.
	(vstr_sc_read_fd): Added function.
	(vstr_sc_write_file): Added function.

	* src/vstr_sect.c (vstr_make_sects): Added function.
	(vstr_free_sects): Added function.
	(vstr_sects_add): Added function.
	(vstr_sects_del): Added function.
	(vstr_sects_srch): Added function.
	(vstr_sects_foreach): Added function.

	* src/vstr_split.c (vstr_split_buf): Added function.

	* src/vstr_parse.c (vstr_parse_short): Added function.
	(vstr_parse_ushort): Added function.
	(vstr_parse_int): Added function.
	(vstr_parse_uint): Added function.
	(vstr_parse_long): Added function.
	(vstr_parse_ulong): Added function.
	(vstr_parse_intmax): Added function.
	(vstr_parse_uintmax): Added function.

	* src/vstr_add.c (vstr_add_vstr): Added _ALL_BUF type.

2002-01-12  James Antill  <james@and.org>

	* src/vstr_fmt.c (vstr__add_number): Bunch of fixes for 
	field widths on ints, moved thousands_sep printing to use 
	vstr__grouping_add_num as that's cleaner.

2002-01-07  James Antill  <james@and.org>

	* src/vstr_srch_netstr.c (vstr__srch_netstr): Make ASCII everywhere.

	* src/vstr.c (vstr__base_scan_rev_beg): Add type information.
	(vstr__base_scan_rev_nxt): Add type information.

	* src/vstr_fmt.c (vstr__add_number): Use the Vstr locale for ints.
	(vstr__fmt_write_spec): Use the Vstr locale for floats/doubles.

	* src/vstr.c (vstr_make_conf): Add vstr locale.

	* src/vstr_cmp.c (vstr_cmp_vers): Make ASCII everywhere.

	* src/vstr_add_netstr.c (vstr_add_netstr2_beg): Make ASCII everywhere.
	(vstr_add_netstr2_end): Make ASCII everywhere.

	* include/vstr-def.h (Vstr_base): Saved some space.

	* src/vstr_fmt.c 

	* src/vstr_conv.c (vstr_conv_unprintable): Added function (not atomic
	atm.)
	(vstr_conv_lowercase): Added function (not atomic atm.)
	(vstr_conv_uppercase): Added function (not atomic atm.)

2002-01-05  James Antill  <james@and.org>

	* src/vstr.c (vstr_make_conf): Bookkeep when a non Vstr_base has a
	reference to a conf.

2001-12-30  James Antill  <james@and.org>

	* src/vstr.c (vstr_make_conf): Change default buf_sz, given size_cmp
	documentation.

2001-12-27  James Antill  <james@and.org>

	* src/vstr_cmp.c (vstr__cmp_memcasecmp): Make ASCII everywhere.

2001-12-07  James Antill  <james@and.org>

	* src/vstr.c (vstr_free_base): Remove test on vstr_del() for all of
	the Vstr.

	* src/vstr_cstr.c (vstr__export_cstr): Allow len == 0, when Vstr_base
	is empty. This is so you can always do 
	vstr_export_vstr_*(a, 1, a->len); and not get assert() fails.


	* src/vstr_del.c (vstr_del): Allow len == 0, when Vstr_base is empty.
	This is so you can always do vstr_del(a, 1, a->len); and not get
	assert() fails.

	* src/vstr_fmt.c (vstr__fmt_write_spec): Fix use of thousands sep. in
	asprintf call.

2001-12-06  James Antill  <james@and.org>

	* examples/ex1.c (main): Print double values, so we know they at least
	sort of work.

	* src/vstr_fmt.c (vstr__fmt_write_spec): Fix printing of double values.

2001-12-05  James Antill  <james@and.org>

	* src/vstr_sub.c (vstr_sub_buf): Add validity checks when running in
	debugging mode.

	* src/vstr_add.c (vstr_add_vstr): Add validity checks when running in
	debugging mode.

	* src/vstr.c (vstr_free_base): Don't delete if there is no data in the
	VStr.
	(vstr__check_spare_nodes): Check that the nodes are the right type for
	the list they are on.
	(vstr__base_scan_fwd_beg): Insist len > 0.
	(vstr__base_scan_rev_beg): Insist len > 0.

	* src/vstr_add.c (vstr__convert_buf_ref): Decrement count of available
	ref nodes when you convert a _buf to a ref.
	(vstr__convert_buf_ref): Fix positioning code.
	(vstr__convert_buf_ref): Change the position cache to point to the
	_ref node if it points to a _buf node we are changing.

	* src/vstr.c (vstr_add_spare_nodes): Added checks.
	(vstr_del_spare_nodes): Added checks.

2001-12-04  James Antill  <james@and.org>

	* src/vstr_spn.c (vstr__spn_buf_rev_fast): Added function to speed up
	reverse traversal.
	(vstr__cspn_buf_rev_fast): Added function to speed up reverse traversal.

	* src/vstr_add.c (vstr__add_setup_pos): Make sure we aren't called with
	pos == 0.
	(vstr_add_buf): Make work for pos == 0, when we already have data.
	(vstr_add_ptr): Make work for pos == 0, when we already have data.
	(vstr_add_non): Make work for pos == 0, when we already have data.
	(vstr_add_ref): Make work for pos == 0, when we already have data.
	(vstr_add_iovec_buf_beg): Added pos argument.
	(vstr_add_iovec_buf_end): Added pos argument.

2001-12-03  James Antill  <james@and.org>

	* src/vstr.c (vstr__base_iovec_reset_node): Fix vector usage when 
	offset is used.
	(vstr__base_scan_rev_nxt): Fix vector usage when offset is used.
	(vstr__base_split_node): Fix ->end ptr on a split.

2001-12-02  James Antill  <james@and.org>

	* src/vstr_mov.c (vstr_mov): Added function.

	* src/vstr_sub.c (vstr_sub_buf): Make function atomic.

	* src/vstr_srch.c (vstr_srch_chr_fwd): Changed char to char type.
	(vstr_srch_chr_rev): Changed char to char type.

	* src/vstr.c (vstr_init_base): Switched arguments aroudn to match other
	functions.

	* examples/ex3.c: Made the file test non typedef compile mode.

	* src/vstr_add_netstr.c (vstr_add_netstr2_beg): Added pos argument.
	(vstr_add_netstr_beg): Added pos argument.
	(vstr_add_netstr2_end): Added end pos argument.
	(vstr_add_netstr_end): Added end pos argument.

2001-11-29  James Antill  <james@and.org>

	* src/vstr_export.c (vstr_export_iovec_cpy_buf): Added function.
	(vstr_export_iovec_cpy_ptr): Added function.

2001-11-21  James Antill  <james@and.org>

	* src/vstr_add.c (vstr__add_all_ref): Add de-ref for the 
	export_cstr_ref.

	* src/vstr_sub.c (vstr_sub_buf): Added function.
	(vstr_sub_ptr): Added function.
	(vstr_sub_non): Added function.
	(vstr_sub_ref): Added function.
	(vstr_sub_vstr): Added function.

2001-11-19  James Antill  <james@and.org>

	* src/vstr_srch.c (vstr_srch_buf_fwd): Fixup for the no below API 
	change.

	* src/vstr_cmp.c (vstr_cmp_vers): 
	(vstr_cmp_case): 
	(vstr_cmp_buf): 
	(vstr_cmp): Don't special case the second cmp being zero to mean
	use the length of the first string, as that means you can't cmp against
	the empty string.

	* src/vstr_srch.c (vstr__srch_chr_rev_slow): Made the function much 
	simpler by just calling vstr_srch_chr_fwd.
	(vstr_srch_buf_rev): Added function.

2001-05-02  James Antill  <james@and.org>

	* src/vstr_add.c (vstr__convert_buf_ref): Add code for 
	VSTR_ADD_TYPE_BUF_REF.

	* src/vstr_del.c (vstr_del): Add code so that we split buf's instead
	of moving memory about in the node itself.

2001-03-29  James Antill  <james@and.org>

	* src/vstr_fmt.c (vstr_add_vfmt): Add support for explicitly specified
	arguments (needed for l12n), _fmt is now almost a complete C99 printf
	like function.

	* TODO: Added TODO file.

2001-03-27  James Antill  <james@and.org>

	* src/vstr_fmt.c (vstr_add_vfmt): Add support for: size_t, long long, 
	intmax_t, ptrdiff_t, char int's ... also fixed some bugs by accident.

	* src/vstr_fmt.c (vstr_add_vfmt): Make NULL string look like 
	glibc/dietlibc.

2001-03-25  James Antill  <james@and.org>

	* src/vstr_srch_netstr.c (vstr__srch_netstr): Don't skip a netstr that
	starts valid but the end would be out of bounds.

2001-03-24  James Antill  <james@and.org>

	* src/vstr_del.c (vstr__base_iovec_del_beg): Another bug in bug 
	checking code.

	* src/vstr.c (vstr__base_iovec_check): Bug in bug checking code :).

	* src/vstr_add.c (vstr_add_iovec_buf_beg): s/||/&&/; in if.
	(vstr_add_iovec_buf_end): Fixed bug in iovs[] start.
	(vstr_add_iovec_buf_beg): Fixed bug in iovs[] start.
	(vstr_add_iovec_buf_end): Reset iovs.len to correct length when it
	isn't full.

2001-03-23  James Antill  <james@and.org>

	* src/vstr_fmt.c (vstr_add_vfmt): Fix bug when passing NULL as %s.

	* src/vstr_ref.c (vstr_ref_del_ref): Stupid bug assuming you can free
	the reference, that's done in the function call.

2001-03-22  James Antill  <james@and.org>

	* src/vstr_cstr.c (vstr_export_cstr_ptr): Added ability to export a 
	"C string" to try and minimise integration pain.

	* src/vstr_add.c (vstr_add_ref): Added offset parameter to add_ref().

	* include/vstr-def.h (VSTR__DECL_TYPEDEF1): Added cache struct to cache
	searches for a position and cstr exports.

	* src/vstr_add.c (vstr_add_vstr): Add ability to add the vstr as a 
	reference to one chunk of memory.

	* src/vstr.c (vstr_del_beg): Fixed bug, when deleting inside the first 
	node.

	* src/vstr_cntl.c (vstr__del_conf): Get rid of vstr__destory_conf, and
	use this.

2001-03-20  James Antill  <james@and.org>

	* src/vstr_ref.c (vstr_ref_cb_free_nothing): Changed name, and moved
	all the vstr_ref_* subsystem into a seperate file.

	* src/vstr.c (vstr_add_ref): Added offset paramter to add_ref.

2001-03-19  James Antill  <james@and.org>

	* src/vstr_spn.c (vstr_spn_buf_rev): Added function.
	(vstr_cspn_buf_rev): Added function.

	* src/vstr_cmp.c (vstr__cmp_memcasecmp): Use local memcasecmp(), as
	we don't want locale specific one.
	(vstr_cmp_case): Move the scan streings along in the non _non node case.
	(vstr_cmp): Move the scan streings along in the non _non node case.

	* src/vstr_spn.c (vstr_spn_buf_fwd): Changed from _str_ to _buf_.
	(vstr_cspn_buf_fwd):  Changed from _str_ to _buf_.

2001-03-16  James Antill  <james@and.org>

	* examples/ex4.c (main): Added example of vstr_srch_netstr().

	* src/vstr_cmp.c (vstr_cmp_buf): Allow cmp's against non, by passing
	NULL as the buf.

	* src/vstr_add_netstr.c (vstr__netstr_end_start): Make the add_buff 
	parameter autodetecting (do it the last node is a _buf).

	* src/vstr_srch_netstr.c (vstr__srch_netstr): Added code to search out 
	netstr/netstr2 data from a vstr.

	* src/vstr_srch.c (vstr_srch_spn_fwd): Allow span counts for "non"
	nodes, by passing NULL as the span string.
	(vstr_srch_cspn_fwd): Allow compliment span counts for "non" nodes, 
	by passing NULL as the compliment span string.
	(vstr_srch_buf_fwd):  Allow searches for a length of "non" nodes, by
	passing NULL as the buf.
	(vstr_srch_buf_fwd): the len param. now applies to the first character 
	in the buffer.

2001-03-15  James Antill  <james@and.org>

	* src/vstr.c (VSTR_C): Initial non me release.

