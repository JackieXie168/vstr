#define VSTR_VERSION_C
/*
 *  Copyright (C) 1999, 2000, 2001  James Antill
 *  
 *  This library is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU Lesser General Public
 *  License as published by the Free Software Foundation; either
 *  version 2 of the License, or (at your option) any later version.
 *   
 *  This library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *  Lesser General Public License for more details.
 *   
 *  You should have received a copy of the GNU Lesser General Public
 *  License along with this library; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 * 
 *  email: james@and.org
 */

/* prints the version and some info out when you run the library */
#include "main.h"

#ifndef HAVE_NO_RELOC_MAIN

void vstr__version_func(void)
{
 Vstr_base *str = NULL;
 struct iovec *vec;
 unsigned int num = 0;
 size_t len = 0;
 ssize_t bytes = 0;

 static const char msg1[] = "Copyright (C) 1999, 2000, 2001 James Antill.\n"
   "This is free software; see the source for copying conditions.\n"
   "There is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A\n"
   "PARTICULAR PURPOSE.\n";
 
 static const char msg2[] =
   "Information can be found at http://www.and.org/vstr/\n"
   "Bug reports should be sent to James Antill <james@and.org>\n";
 
 vstr_init();
 
 str = vstr_make_base(NULL);
 if (!str)
   _exit (EXIT_FAILURE);

 vstr_add_fmt(str, str->len, 
              "Vstr library release version %s, by James Antill.\n",
              "@VERSION@");
 vstr_add_ptr(str, str->len, sizeof(msg1) - 1, msg1);
 vstr_add_fmt(str, str->len, " Compiled on %s at %s.\n", __DATE__, __TIME__);
 vstr_add_ptr(str, str->len, sizeof(msg2) - 1, msg2);
 
 len = vstr_export_iovec_ptr_all(str, &vec, &num);

 while ((size_t)(bytes = writev(1, vec, num)) != len)
 {
  if ((bytes == -1) && (errno != EAGAIN))
    break;
  if (bytes == -1)
    continue;

  vstr_del(str, 1, (size_t)bytes);

  len = vstr_export_iovec_ptr_all(str, &vec, &num);
 }

 _exit (EXIT_SUCCESS);
}
#if 0
extern void start(void) __attribute__ ((weak, alias ("vstr__version_func")));
#endif

#endif
